apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-{{ .Release.Name }}
{{- include "namespace" . | indent 2 }}
  labels:
{{- include "product.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{- include "product.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{- include "product.labels" . | indent 8 }}
    spec:
      hostname: {{.Chart.Name}}-{{ .Release.Name }}
{{- if .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets.name }}
{{- end }}
      initContainers:
        - name: gateway-drivers-deployer
          securityContext:
            runAsUser: 0
          image: {{ tpl .Values.gatewayDriversImage.registry . }}/{{ tpl .Values.gatewayDriversImage.repository . }}:{{ tpl .Values.gatewayDriversImage.tag .}}
          command: ['/bin/sh']
          args: ['-c', 'cp -a /opt/drivers/. {{ tpl .Values.mount.iserverGatewayDriversMountPath . }}' ]
          volumeMounts:
            - mountPath: {{ tpl .Values.mount.iserverGatewayDriversMountPath . }}
              name: drivers-volume
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
        - /opt/mstr/wait_for_it.sh
{{- if .Values.dbserver.override }}
        - {{ tpl .Values.dbserver.md_server . }}:5432
{{- else }}
        - postgres-{{ .Release.Name }}:5432
{{- end }}
        - --timeout=600
        - --
        - /mnt/scripts/init_iserver.sh
        env:
        - name: IS_CONFIG_FILE
          value: {{ .Values.config.is_config_file }}
        - name: IS_CONFIG_OPT
          value: ini
{{- if .Values.dbserver.override }}
        - name: DB_MD_SERVER
          value: {{ tpl .Values.dbserver.md_server . }}
        #- name: DB_WH_SERVER
        #  value: {{ tpl .Values.dbserver.wh_server . }}
{{- else }}
        - name: DB_MD_SERVER
          value: postgres-{{ .Release.Name }}
        #- name: DB_WH_SERVER
        #  value: mysql-{{ .Release.Name }}
{{- end }}
        #- name: DB_WH_PORT
        #  value: "3306"
        - name: DB_USER
          value: {{ .Values.odbc.db_md_user }}
        - name: DB_MD_PORT
          value: "5432"
        - name: DB_MD_NAME
          value: {{ .Values.odbc.db_md_name }}
        #- name: DB_WH_NAME
        #  value: {{ .Values.odbc.db_wh_name }}
        - name: DB_TYPE
          value: {{ .Values.odbc.md_type }}
        - name: DSN_MD
          value: {{ .Values.odbc.dsn_md }}
        #- name: DSN_WH
        #  value: {{ .Values.odbc.dsn_wh }}
        - name: SERVER_DEF
          value: {{ .Values.config.serverdef }}
        - name: NEE_HOST
          value: nee-{{ .Release.Name }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 34952
        - containerPort: 34962
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "/opt/mstr/MicroStrategy/bin/mstrctl -s IntelligenceServer gs | grep running"
          initialDelaySeconds: 60
          periodSeconds: 60
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: log-dir
          mountPath: /opt/mstr/MicroStrategy/log
        - name: drivers-volume
          mountPath: {{ tpl .Values.mount.iserverGatewayDriversMountPath . }} 
{{- if .Values.volumes.cube.enabled }}
        - name: cube
          mountPath: {{ .Values.volumes.cube.mount_to }}/Server_{{ .Chart.Name }}-{{ .Release.Name }}_P{{ .Values.volumes.cube.project_id }}
{{- end }}
{{- if .Values.streamer.enabled }}
        - name: streamer
          image: busybox
          args: [/bin/sh, -c, 'tail -n+1 -f /var/log/log-dir/DSSErrors.log']
          volumeMounts:
          - name: log-dir
            mountPath: /var/log/log-dir
{{- end }}
{{- if .Values.config.from_config_map }}
        - name: odbc-config-volume
          mountPath: /opt/mstr/MicroStrategy/odbc.ini
          subPath: odbc.ini
        - name: iserver-config-volume
          mountPath: /opt/mstr/MicroStrategy/config.ini
          subPath: config.ini
        - name: init-iserver
          mountPath: /mnt/scripts/init_iserver.sh
          subPath: init_iserver.sh
        - name: fix-encoding
          mountPath: /mnt/scripts/fix_encoding.sh
          subPath: fix_encoding.sh
{{- end }}
      volumes:
      - name: log-dir
        emptyDir: {}
      - name: drivers-volume
        emptyDir: {}
{{- if .Values.config.from_config_map }}
      - name: odbc-config-volume
        configMap:
          name: {{ tpl .Values.config.config_map_name . }}
          defaultMode: 0777
          items:
          - key: odbc.ini
            path: odbc.ini
      - name: iserver-config-volume
        configMap:
          name: {{ tpl .Values.config.config_map_name . }}
          defaultMode: 0777
          items:
          - key: config.ini
            path: config.ini
      - name: init-iserver
        configMap:
          name: {{ tpl .Values.config.config_map_name . }}
          defaultMode: 0777
          items:
          - key: init_iserver.sh
            path: init_iserver.sh
      - name: fix-encoding
        configMap:
          name: {{ tpl .Values.config.config_map_name . }}
          defaultMode: 0777
          items:
          - key: fix_encoding.sh
            path: fix_encoding.sh
{{- end }}
{{- if .Values.volumes.cube.enabled }}
      - name: cube
        nfs:
          server: {{ .Values.volumes.cube.nfs_server }}
          path: {{ .Values.volumes.cube.mount_path }}
{{- end }}
      restartPolicy: Always
status: {}
